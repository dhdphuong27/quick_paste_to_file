<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <!-- ======================
         COLOR RESOURCES
         ====================== -->
    <SolidColorBrush x:Key="DarkPrimary" Color="#1b1c1d"/>
    <SolidColorBrush x:Key="DarkSecondary" Color="#282a2c"/>
    <SolidColorBrush x:Key="DarkTertiary" Color="#333537"/>
    <SolidColorBrush x:Key="DarkSurface" Color="#262627"/>
    <SolidColorBrush x:Key="DarkBorder" Color="#404040"/>
    <SolidColorBrush x:Key="DarkText" Color="#E0E0E0"/>
    <SolidColorBrush x:Key="DarkTextMuted" Color="#888888"/>
    <SolidColorBrush x:Key="AccentBlue" Color="#007ACC"/>
    <SolidColorBrush x:Key="AccentPurple" Color="#7E57C2"/>
    <SolidColorBrush x:Key="ErrorRed" Color="#FF5252"/>
    <SolidColorBrush x:Key="LightGray" Color="#E0E0E0"/>

    <!-- ======================
         COMMON EFFECTS
         ====================== -->
    <DropShadowEffect x:Key="CommonShadow" BlurRadius="10" ShadowDepth="2" Color="Black" Opacity="0.3"/>

    <!-- ======================
         GEOMETRY RESOURCES
         ====================== -->
    <Geometry x:Key="ArrowLeft">M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z</Geometry>
    <Geometry x:Key="ArrowRight">M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z</Geometry>
    <PathGeometry x:Key="SearchIcon">M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z</PathGeometry>

    <!-- ======================
         BUTTON STYLES
         ====================== -->

    <!-- Primary Button (was quickSaveButton) -->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#232425"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#444"/>
                <Setter Property="Foreground" Value="{StaticResource DarkTextMuted}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Secondary Button (was DarkButtonStyle) -->
    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="Background" Value="#3C3C3C"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="BorderBrush" Value="#555555"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4C4C4C"/>
                            <Setter Property="BorderBrush" Value="#666666"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#2C2C2C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accent Button (was ModernButtonStyle) -->
    <Style x:Key="AccentButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentPurple}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#9575CD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon Button (was gridButton) -->
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#232425"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======================
         PAGINATION STYLES
         ====================== -->

    <!-- Base Pagination Button -->
    <Style x:Key="PaginationButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="{StaticResource DarkPrimary}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#232425"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#444"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Left Arrow Button -->
    <Style x:Key="PaginationLeftButton" TargetType="Button" BasedOn="{StaticResource PaginationButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <Path Data="{StaticResource ArrowLeft}" Fill="#6c757d" Width="16" Height="16" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#232425"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#444"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Right Arrow Button -->
    <Style x:Key="PaginationRightButton" TargetType="Button" BasedOn="{StaticResource PaginationButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <Path Data="{StaticResource ArrowRight}" Fill="#6c757d" Width="16" Height="16" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#232425"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#444"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======================
         INPUT CONTROLS
         ====================== -->

    <!-- Primary TextBox (was ModernTextbox and SearchTextBoxStyle combined) -->
    <Style x:Key="PrimaryTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource DarkSurface}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="FontSize" Value="14"/>
        
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Multiline TextBox (was EditTextBox) -->
    <Style x:Key="MultilineTextBox" TargetType="TextBox" BasedOn="{StaticResource PrimaryTextBox}">
        <Setter Property="Height" Value="200"/>
        <Setter Property="MaxHeight" Value="200"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!-- Search Container -->
    <Style x:Key="SearchContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource DarkSurface}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Height" Value="36"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBlue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Search Button -->
    <Style x:Key="SearchButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,4,4,0">
                        <Path Data="{StaticResource SearchIcon}" Fill="{StaticResource DarkTextMuted}" Width="16" Height="16" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    <Style x:Key="DarkCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="CheckBorder" Width="16" Height="16" BorderBrush="#666666" BorderThickness="1"
                                Background="#2D2D30" CornerRadius="2" Margin="0,0,6,0">
                            <Path x:Name="CheckMark" Data="M 0 3 L 3 6 L 8 1" Stroke="{StaticResource DarkText}"
                                  StrokeThickness="2" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CheckBorder" Property="Background" Value="#333333"/>
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="#333333"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======================
         DATAGRID STYLES
         ====================== -->

    <!-- Main DataGrid -->
    <Style x:Key="DarkDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightGray}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="RowBackground" Value="{StaticResource DarkSurface}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource DarkSurface}"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="RowHeight" Value="48"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DarkDataGridColumnHeader}"/>
        <Setter Property="RowStyle" Value="{DynamicResource DarkDataGridRow}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DarkDataGridCell}"/>
    </Style>

    <!-- DataGrid Column Header -->
    <Style x:Key="DarkDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource DarkTertiary}"/>
        <Setter Property="Foreground" Value="{StaticResource LightGray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkPrimary}"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <!-- DataGrid Row -->
    <Style x:Key="DarkDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource DarkSurface}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="48"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#444444"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#333333"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid Cell -->
    <Style x:Key="DarkDataGridCell" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Cell Content -->
    <Style x:Key="CellText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- ======================
         ICON STYLES
         ====================== -->

    <!-- Standard Icon -->
    <Style x:Key="StandardIcon" TargetType="Icon:PackIconMaterial">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource DarkText}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!-- ======================
         TEXT STYLES
         ====================== -->

    <!-- Notification Text -->
    <Style x:Key="NotificationText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ErrorRed}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>

</ResourceDictionary>